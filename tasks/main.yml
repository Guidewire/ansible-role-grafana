---
- include: "{{ ansible_os_family|lower }}_repo.yml"

- name: change grafana settings if required
  ini_file: dest=/etc/grafana/grafana.ini
            section={{ item.s }}
            option={{ item.o }}
            value={{ item.v }}
            backup=yes
  with_items:
      - { s: server, o: http_port, v: "{{ grafana_http_port }}" }
      - { s: server, o: http_addr, v: "{{ grafana_http_addr }}" }
      - { s: auth.basic, o: enabled, v: "{{ 'true' if grafana_basic_auth_enabled else 'false' }}" }
  notify: restart grafana-server

- name: Set up github auth for grafana
  ini_file: dest=/etc/grafana/grafana.ini
            section={{ item.s }}
            option={{ item.o }}
            value={{ item.v }}
            backup=yes
  with_items:
      - { s: auth.github, o: enabled, v: "true" }
      - { s: auth.github, o: client_id, v: "{{ grafana_github_client_id }}" }
      - { s: auth.github, o: client_secret, v: "{{ grafana_github_client_secret }}" }
      - { s: auth.github, o: allow_sign_up, v: "{{ 'true' if grafana_github_allow_sign_up else 'false' }}" }
      - { s: auth.github, o: scopes, v: "user:email" }
      - { s: auth.github, o: auth_url, v: "https://github.com/login/oauth/authorize" }
      - { s: auth.github, o: token_url, v: "https://github.com/login/oauth/access_token" }
      - { s: auth.github, o: team_ids, v: "{% for id in grafana_github_team_ids %}{{ id }}{%if not loop.last %},{% endif %}{% endfor %}" }
  notify: restart grafana-server
  when: grafana_github_auth_enabled

- name: check if default signing key is presented in a config file
  find:
    paths: /etc/grafana/grafana.ini
    contains: SW2YcwTIb9zpOOhoPsMm
  changed_when: grafana_security_issue.matched != 0
  register: grafana_security_issue

- name: change grafana signing key
  ini_file: dest=/etc/grafana/grafana.ini
            section=security
            option=secret_key
            value="{{ ansible_date_time.iso8601_micro|shuffle|join('')|to_uuid}}"
            backup=yes
  when: grafana_security_issue|changed
  notify: restart grafana-server

- name: start and autostart grafana-server
  service: name=grafana-server state=started enabled=yes

- name: check grafana
  wait_for: host="{{ '127.0.0.1' if grafana_http_addr == '0.0.0.0' else grafana_http_addr }}" port="{{ grafana_http_port }}"

- name: flush handlers
  meta: flush_handlers

- include: tests.yml
